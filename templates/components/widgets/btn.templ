package widgets

type BtnProps struct {
	Id         string
	Type       string
	Text       string
	IsDisabled bool
	PreStyled  bool
	Name       string
	Class      string
	Href       templ.SafeURL
	OnClick    string
	// AlpineJS props:
	AClick string
	// HTMX props:
	HXPost        string
	HXGet         string
	HXTrigger     string
	HXTarget      string
	HXSwap        string
	HXIndicator   string
	XBindHXGet    string
	XBindDisabled string
}

/**
* Button Component.
*
* @author: github.com/tego101 <-> x.com/tegodotdev
* @license: MIT
* =====================
* This is a button component with a primary style.
*
* Usage:
* @widgets.Btn(widgets.BtnProps{
*	Text: "Click Me",
*	Class: "CUSTOM CLASS",
*   OnClick: "console.log('Hello World')",
* })
 */

templ Btn(props BtnProps) {
	<button
    id={ props.Id }
		if props.PreStyled {
			class={ props.Class + " hoverable overflow-clip h-10 disabled:animate-pulse flex flex-row disabled:cursor-not-allowed disabled:opacity-60 disabled:bg-slate-600 disabled:hover:bg-slate-700 inline-flex items-center justify-between px-4 py-2 lg:text-sm font-medium tracking-wide text-white transition-colors duration-200 rounded-md bg-neutral-950 dark:bg-[#d3d3d3] dark:hover:bg-[#f4f4f4] dark:text-black focus:ring-0 focus:ring-offset-0 focus:ring-neutral-900 focus:shadow-outline focus:outline-none"}
		} else {
			class={ props.Class + " hoverable"}
		}
		type={ props.Type }
		name={ props.Name }
		OnClick={ props.OnClick }
		@click={ props.AClick }
		disabled?={ props.IsDisabled }
		if props.HXPost != "" {
			hx-post={ props.HXPost }
		}
		if props.HXGet != "" {
			hx-get={ props.HXGet }
		}
		if props.HXTrigger != "" {
			hx-trigger={ props.HXTrigger }
		}
		if props.HXTarget != "" {
			hx-target={ props.HXTarget }
		}
		if props.HXSwap != "" {
			hx-swap={ props.HXSwap }
		}
		if props.HXIndicator != "" {
			hx-indicator={ props.HXIndicator }
		}
		if props.XBindHXGet != "" {
			x-bind:hx-get={ props.XBindHXGet }
		}
		if props.XBindDisabled != "" {
			x-bind:disabled={ props.XBindDisabled }
		}
	>
    <span 
      if props.PreStyled {
        class="flex mx-2 font-medium text-center"
      }
    >
      if props.Text != "" {
        {props.Text}
      } else {
        {children...}
      }
    </span>
	</button>
}
